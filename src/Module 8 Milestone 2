class ItemToPurchase:
    def __init__(self, name="none", price=0.0, quantity=0, description="none"):
        self.item_name = name
        self.item_price = price
        self.item_quantity = quantity
        self.item_description = description

    def print_item_cost(self):
        total_cost = self.item_price * self.item_quantity
        print(f"{self.item_name} {self.item_quantity} @ ${int(self.item_price)} = ${int(total_cost)}")

    def get_total_cost(self):
        return self.item_price * self.item_quantity


class ShoppingCart:
    def __init__(self, customer_name="none", current_date="January 1, 2020"):
        self.customer_name = customer_name
        self.current_date = current_date
        self.cart_items = []

    def add_item(self, item: ItemToPurchase):
        self.cart_items.append(item)

    def remove_item(self, item_name: str):
        for i, it in enumerate(self.cart_items):
            if it.item_name == item_name:
                self.cart_items.pop(i)
                return
        print("Item not found in cart. Nothing removed.")

    def modify_item(self, item: ItemToPurchase):
        for it in self.cart_items:
            if it.item_name == item.item_name:
                if item.item_description != "none":
                    it.item_description = item.item_description
                if item.item_price != 0.0:
                    it.item_price = item.item_price
                if item.item_quantity != 0:
                    it.item_quantity = item.item_quantity
                return
        print("Item not found in cart. Nothing modified.")

    def get_num_items_in_cart(self):
        return sum(it.item_quantity for it in self.cart_items)

    def get_cost_of_cart(self):
        return sum(it.get_total_cost() for it in self.cart_items)

    def print_total(self):
        print(f"{self.customer_name}'s Shopping Cart - {self.current_date}")
        print(f"Number of Items: {self.get_num_items_in_cart()}")
        if not self.cart_items:
            print("SHOPPING CART IS EMPTY")
            print("Total: $0")
            return
        for it in self.cart_items:
            it.print_item_cost()
        print(f"Total: ${int(self.get_cost_of_cart())}")

    def print_descriptions(self):
        print(f"{self.customer_name}'s Shopping Cart - {self.current_date}")
        print("Item Descriptions")
        for it in self.cart_items:
            print(f"{it.item_name}: {it.item_description}")


def print_menu(cart: ShoppingCart):
    while True:
        print("\nMENU")
        print("a - Add item to cart")
        print("r - Remove item from cart")
        print("c - Change item quantity")
        print("i - Output items' descriptions")
        print("o - Output shopping cart")
        print("q - Quit")
        choice = input("Choose an option:\n").strip().lower()

        if choice == "q":
            break
        elif choice == "a":
            print("\nADD ITEM TO CART")
            name = input("Enter the item name: ")
            description = input("Enter the item description: ")
            price = float(input("Enter the item price: "))
            quantity = int(input("Enter the item quantity: "))
            cart.add_item(ItemToPurchase(name, price, quantity, description))
        elif choice == "r":
            print("\nREMOVE ITEM FROM CART")
            name = input("Enter name of item to remove: ")
            cart.remove_item(name)
        elif choice == "c":
            print("\nCHANGE ITEM QUANTITY")
            name = input("Enter the item name: ")
            quantity = int(input("Enter the new quantity: "))
            cart.modify_item(ItemToPurchase(name=name, quantity=quantity))
        elif choice == "i":
            print("\nOUTPUT ITEMS' DESCRIPTIONS")
            cart.print_descriptions()
        elif choice == "o":
            print("\nOUTPUT SHOPPING CART")
            cart.print_total()
        else:
            continue


if __name__ == "__main__":
    customer_name = input("Enter customer's name:\n")
    current_date = input("Enter today's date:\n")
    print(f"\nCustomer name: {customer_name}")
    print(f"Today's date: {current_date}")
    cart = ShoppingCart(customer_name, current_date)
    print_menu(cart)
